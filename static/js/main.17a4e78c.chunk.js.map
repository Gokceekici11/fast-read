{"version":3,"sources":["containers/InsertArticle/reducer.js","reducers.js","containers/InsertArticle/constants.js","utils/theme.js","App.style.js","components/Button/styled.js","components/Layouts/index.js","components/Button/index.js","components/Icons/index.js","containers/InsertArticle/styled.js","containers/InsertArticle/index.js","containers/InsertArticle/action.js","components/Badge/styled.js","components/Badge/index.js","components/Steps/Steps.styled.js","components/Steps/Step.styled.js","components/Steps/Step.js","components/Steps/Steps.js","containers/ReadArticle/index.js","App.js","serviceWorker.js","index.js"],"names":["initialState","reducers","combineReducers","articleList","state","action","type","Object","assign","id","article","numberOfPage","currentPage","wordList","colors","deviceSizes","AppWrapper","styled","div","Header","Content","ButtonWrapper","height","width","tWidth","mWidth","Margin","top","bottom","right","left","TextWrapper","fontSize","fontColor","PageWrapper","Button","leftIcon","rightIcon","rest","Here","fill","viewBox","stroke","stroke-width","fill-rule","transform","points","d","Check","color","stroke-linecap","stroke-linejoin","class","ArrowRight","clipRule","TextArea","textarea","connect","dispatch","insertArticle","tooLongWord","split","map","word","length","Math","ceil","uid","insertAticle","injectIntl","intl","useState","setArticle","placeholder","formatMessage","tooLongWordMsg","onChange","value","target","to","onClick","BadgeWrapper","Badge","StepsWrapper","StepWrapper","StepCircle","success","current","StepLine","Step","Steps","ReadArticle","App","path","component","InsertArticle","Boolean","window","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","messages","messages_tr","messages_en","language","navigator","ReactDOM","render","locale","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17a4e78c.chunk.js","sourcesContent":["import { INSERT_ARTICLE } from './constants'\n\nconst initialState = []\n\nexport const articleList = (state = initialState, action) => {\n    switch (action.type) {\n        case INSERT_ARTICLE:\n            return Object.assign({}, state,\n                [\n                    ...state,\n                    {\n                        id: action.article.id,\n                        numberOfPage: action.article.numberOfPage,\n                        currentPage: action.article.currentPage,\n                        wordList: action.article.wordList,\n                    }\n                ])\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux'\n\nimport { articleList } from './containers/InsertArticle/reducer'\n\nconst reducers = combineReducers({\n    articleList\n    })\n\nexport default reducers\n","export const INSERT_ARTICLE = 'INSERT_ARTICLE'\n","export const colors = {\n    purpleColor: \"#E1D5E7\",\n    purpleDarkColor: \"#9673A6\",\n    tundora: \"#4D4D4D\",\n    codGray: \"#1A1A1A\",\n    chelseaCucumber: \"#82B366\",\n    alabasterapprox: \"#FBFBFB\",\n    white: \"#FFFFFF\",\n    guardsmanRed: \"#CC0000\",\n    success: \"#D5E8D4\"\n}\n\nexport const deviceSizes = {\n    largeTablet: \"991px\",\n    tablet: \"767px\",\n    mobile: \"479px\",\n}\n","import styled from 'styled-components'\n\nimport { colors } from 'utils'\n\nexport const AppWrapper = styled.div`\n    display: flex;\n    flex-flow: column;\n    width: 100%;\n    height: inherit;\n`;\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: ${colors.purpleColor};\n    height:50px;\n    font-weight: bold;\n    border-style: solid;\n    border-width: 1px;\n    border-color: ${colors.purpleDarkColor};\n`;\n\nexport const Content = styled.div`\n    display: flex;\n    flex-grow : 1;\n    flex-flow: column;\n    padding: 20px;\n`;\n","import styled from 'styled-components'\n\nimport { colors, deviceSizes } from 'utils'\n\nexport const ButtonWrapper = styled.div`\n    border-color: ${colors.purpleDarkColor};\n    border-width: 2px;\n    border-radius: 20px;\n    border-style: solid;\n    background-color: ${colors.white};\n    display: flex;\n    flex-flow: row;\n    align-items: center;\n    justify-content: space-between;\n    cursor: pointer;\n    \n    ${({height}) => height && `height: ${height}px`};\n    ${({width}) => width && `width: ${width}px`};\n    @media (max-width: ${deviceSizes.tablet}) {\n        ${({tWidth}) => tWidth && `width: ${tWidth}px`};\n    }\n    \n    @media (max-width: ${deviceSizes.mobile}) {\n        ${({mWidth}) => mWidth && `width: ${mWidth}px`};\n    }\n\n    :hover {\n        background-color: ${colors.alabasterapprox};\n    }\n`\n\n","import styled from 'styled-components'\n\nimport { colors } from 'utils'\n\nexport const Margin = styled.div`\n    ${({ top }) => top && `margin-top: ${top}px`}\n    ${({ bottom }) => bottom && `margin-bottom: ${bottom}px`}\n    ${({ right }) => right && `margin-right: ${right}px`}\n    ${({ left }) => left && `margin-left: ${left}px`}\n`\n\nexport const Padding = styled.div`\n    ${({ top }) => top && `padding-top: ${top}px;`}\n    ${({ bottom }) => bottom && `padding-bottom: ${bottom}px;`}\n    ${({ right }) => right && `padding-right: ${right}px;`}\n    ${({ left }) => left && `padding-left: ${left}px;`}\n`\n\nexport const TextWrapper = styled.div`\n    color: ${colors.codGray};\n    ${({ fontSize }) => fontSize && `font-size: ${fontSize}px;`}\n    ${({ fontColor }) => fontColor && `color: ${fontColor};`}\n`\n\nexport const PageWrapper = styled.div`\n    display: flex;\n    flex-flow: column;\n    flex-grow: 1;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n`;\n","import React from 'react'\nimport { FormattedMessage } from 'react-intl';\n\nimport { ButtonWrapper } from './styled'\nimport { TextWrapper, Margin } from 'components/Layouts';\n\nconst Button = ({ leftIcon, rightIcon , ...rest}) => {\n    return (\n        <ButtonWrapper {...rest}>\n            <Margin left=\"4\">\n                {leftIcon}\n            </Margin>\n            <TextWrapper fontSize=\"20\">\n                <FormattedMessage id='insertArticle.button' />\n            </TextWrapper>\n            <Margin right=\"4\">\n                {rightIcon}\n            </Margin>\n        </ButtonWrapper>\n    )\n}\n\nexport default Button\n","import React from 'react'\n\nimport { colors } from 'utils/theme'\n\nexport const Here = ({ fill = colors.purpleDarkColor, width = 24, height = 32 }) =>{\n    return (\n        <svg width={width} height={height} viewBox=\"0 0 14 20\" >\n            <g id=\"Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                <g id=\"Rounded\" transform=\"translate(-377.000000, -1306.000000)\">\n                    <g id=\"Communication\" transform=\"translate(100.000000, 1162.000000)\">\n                        <g id=\"-Round-/-Communication-/-location_on\" transform=\"translate(272.000000, 142.000000)\">\n                            <g>\n                                <polygon id=\"Path\" points=\"0 0 24 0 24 24 0 24\"></polygon>\n                                <path d=\"M12,2 C8.13,2 5,5.13 5,9 C5,13.17 9.42,18.92 11.24,21.11 C11.64,21.59 12.37,21.59 12.77,21.11 C14.58,18.92 19,13.17 19,9 C19,5.13 15.87,2 12,2 Z M12,11.5 C10.62,11.5 9.5,10.38 9.5,9 C9.5,7.62 10.62,6.5 12,6.5 C13.38,6.5 14.5,7.62 14.5,9 C14.5,10.38 13.38,11.5 12,11.5 Z\" id=\"🔹Icon-Color\" fill={fill}></path>\n                            </g>\n                        </g>\n                    </g>\n                </g>\n            </g>\n</svg>\n\n    )\n}\n\nexport const Check = ({ color = colors.success, width = 24, height = 24 }) => {\n    return(\n        <svg width={width} height={height} fill=\"none\" stroke={color} stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-check-circle\">\n            <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\n            <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\n        </svg>\n    )\n}\n\nexport const ArrowRight = ({ fill = '#121313', width = 35, height = 32 }) => {\n    return(\n        <svg width={width} height={height} fill={fill}>\n            <path clipRule='evenodd' d=\"M31.705,15.284L31.705,15.284L31.705,15.284\n                 l-9.97-9.991c-0.634-0.66-1.748-0.162-1.723,0.734v4.976C20.008,11.002,20.004,11,20,11H1c-0.55,0-1,0.45-1,1v8c0,0.55,0.45,1,1,1\n                 h19c0.004,0,0.008-0.002,0.012-0.002v4.972c-0.024,0.892,1.082,1.376,1.715,0.742l9.977-9.999\n                 C32.098,16.318,32.098,15.678,31.705,15.284z M22.017,23.564V19H22h-1h-0.988v0.002C20.008,19.002,20.004,19,20,19h-1H2v-6h17h1\n                 c0.004,0,0.008-0.002,0.012-0.002V13H21h1h0.017V8.432l7.55,7.566L22.017,23.564z\"/>\n            <g /><g /><g /><g /><g /><g />\n        </svg>\n    )\n}\n","import styled from 'styled-components'\n\nimport { colors, deviceSizes } from 'utils'\n\nexport const TextArea = styled.textarea`\n    border-color: ${colors.purpleDarkColor};\n    border-width: 1px;\n    border-radius: 20px;\n    height: 340px;\n    font-size: 16px;\n    padding: 10px;\n    text-align: ${({ article }) => article ? 'left' : 'center'};\n    line-height: ${({ article }) => article ? '18px' : '340px'};\n    font-color: ${({ article }) => article ? colors.codGray : colors.tundora}\n\n    &: focus {\n        text-align: left;\n        line-height: 18px;\n    }\n\n    width: 720px;\n\n    @media (max-width: ${deviceSizes.tablet}) {\n        width: 450px;\n    }\n    @media (max-width: ${deviceSizes.mobile}) {\n        width: 290px;\n    }\n`\n","import React, { useState } from 'react'\nimport { injectIntl } from 'react-intl';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux'\n\nimport Button from 'components/Button';\nimport { Margin, PageWrapper } from 'components/Layouts';\nimport { ArrowRight } from 'components/Icons';\nimport { TextArea } from './styled'\n\nimport { colors } from 'utils';\nimport { insertAticle } from './action';\n\nconst InsertArticle = ({ intl, insertArticle }) => {\n    const [article, setArticle] = useState('');\n    const placeholder = intl.formatMessage({ id: 'insertArticle.placeholder' });\n    const tooLongWordMsg = intl.formatMessage({ id: 'insertArticle.action.tooLongWord' });\n\n    const handleChangeArticle = ({ target: { value } }) => {\n        setArticle(value)\n    }\n    return (\n        <PageWrapper>\n            <TextArea\n                onChange={handleChangeArticle}\n                article={article}\n                placeholder={placeholder} />\n            <Margin top=\"16\">\n                <Link to=\"/read\">\n                    <Button\n                        height=\"50\"\n                        width=\"740\"\n                        tWidth=\"470\"\n                        mWidth=\"310\"\n                        onClick={() => insertArticle(article,tooLongWordMsg)}\n                        rightIcon={<ArrowRight fill={colors.chelseaCucumber} />} />\n                </Link>\n            </Margin>\n        </PageWrapper>\n    )\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        insertArticle: (article, tooLongWord) => dispatch(insertAticle(article, tooLongWord)),\n    }\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(injectIntl(InsertArticle));\n","import uid from 'uid'\n\nimport { INSERT_ARTICLE } from './constants'\n\nexport const insertAticle = (article, tooLongWord) => {\n    const wordList = article.split(' ').map(word =>\n        word.length < 30 ? word : tooLongWord)\n    const numberOfPage = Math.ceil(wordList.length / 100)\n    const currentPage = 1\n\n    return {\n        type: INSERT_ARTICLE,\n        article:{\n            id: uid(15),\n            numberOfPage,\n            currentPage,\n            wordList\n        }\n    }\n}\n","import styled from 'styled-components'\n\nexport const BadgeWrapper = styled.div`\n    ${({ color }) => `background-color: ${color}`};\n    border-radius: 4px;\n    padding: 4px;\n    cursor: pointer;\n\n    :hover {\n        opacity: 0.9;\n    }\n    :active {\n        opacity: 1;\n    }\n`\n","import React from 'react'\n\nimport { BadgeWrapper } from './styled'\n\nconst Badge = ({ color, ...rest}) => {\n    return (\n        <BadgeWrapper {...rest} color={color} ></BadgeWrapper>\n    )\n}\n\nexport default Badge\n","import styled from 'styled-components'\n\nexport const StepsWrapper = styled.div`\n    display: flex;\n    flex-flow: row;\n    justify-content: space-between;\n    flex-wrap: nowrap;\n    width: 100%\n`\n","import styled from 'styled-components'\n\nimport { colors } from 'utils/theme'\n\nexport const StepWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n    :last-child{\n        flex-grow: 0;\n    }\n    }\n`\nexport const StepCircle = styled.div`\n    border: 1px solid ${({ success, current }) => (success && colors.success) || (current && colors.purpleDarkColor) || colors.tundora};\n    width: 26px;\n    height: 26px;\n    line-height: 26px;\n    text-align: center;\n    border-radius: 26px;\n`\n\nexport const StepLine = styled.div`\n    border-top: 1px solid ${({ success }) => (success && colors.success) || colors.tundora};\n    flex-grow: 1;\n    margin: 0 5px;\n`\n","import React from 'react'\n\nimport { StepWrapper, StepCircle, StepLine } from './Step.styled'\nimport { Check, Here } from 'components/Icons'\n\nconst Step = ({ success, current }) => {\n    return (\n        <StepWrapper>\n            {(success && <Check />) || (current && <Here />) || <StepCircle success={success} current={current}></StepCircle>}\n            <StepLine success={success} />\n        </StepWrapper>\n    )\n}\n\nexport default Step","import React from 'react'\n\nimport { StepsWrapper } from './Steps.styled'\nimport Step from './Step'\n\nconst Steps = () =>{\n    return(\n        <StepsWrapper>\n            <Step success/>\n            <Step current/>\n            <Step />\n        </StepsWrapper>\n    )\n}\n\nexport default Steps","import React from 'react'\n\nimport { PageWrapper, TextWrapper } from 'components/Layouts'\nimport Badge from 'components/Badge'\nimport { colors } from 'utils'\nimport Steps from 'components/Steps/Steps'\n\nconst ReadArticle = () => {\n    return (\n        <PageWrapper>\n            <TextWrapper fontSize=\"16\">Read Page</TextWrapper>\n            <Steps />\n            <Badge color={colors.guardsmanRed}>\n                <TextWrapper fontSize=\"16\">word</TextWrapper>\n            </Badge>\n            <Badge color={colors.purpleDarkColor}>\n                <TextWrapper fontSize=\"16\">word2</TextWrapper>\n            </Badge>\n            <Badge>\n                <TextWrapper fontSize=\"16\">word3</TextWrapper>\n            </Badge>\n        </PageWrapper>\n    )\n}\n\nexport default ReadArticle;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { AppWrapper, Header, Content } from './App.style'\nimport InsertArticle from 'containers/InsertArticle'\nimport ReadArticle from 'containers/ReadArticle';\n\nfunction App() {\n  return (\n    <AppWrapper >\n      <Header>\n        <FormattedMessage id='appName' />\n      </Header>\n      <Content>\n        <Router>\n          <Switch>\n            <Route path='/read' component={ReadArticle} />\n            <Route path='/' component={InsertArticle} />\n          </Switch>\n        </Router>\n      </Content>\n    </AppWrapper>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { IntlProvider } from 'react-intl';\n\nimport messages_en from 'translations/en.json'\nimport messages_tr from 'translations/tr.json'\nimport reducers from './reducers'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducers,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nconst messages = {\n    'tr': messages_tr,\n    'en': messages_en\n};\nconst language = navigator.language.split(/[-_]/)[0];\n\nReactDOM.render(\n    <Provider store={store}>\n        <IntlProvider locale={navigator.language} messages={messages[language]}>\n            <App />\n        </IntlProvider>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}