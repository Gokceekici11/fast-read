{"version":3,"sources":["containers/InsertArticle/InsertArticle.reducer.js","reducers.js","containers/InsertArticle/InsertArticle.constants.js","utils/theme.js","App.style.js","components/Button/Button.styled.js","components/Layouts/Layouts.js","components/Button/Button.js","components/Icons/Icons.js","containers/InsertArticle/InsertArticle.styled.js","containers/InsertArticle/InsertArticle.js","containers/InsertArticle/InsertArticle.action.js","containers/ReadArticle/ReadArticle.js","App.js","serviceWorker.js","index.js"],"names":["initialState","articleList","reducers","combineReducers","insertArticleReducer","state","action","type","Object","assign","id","article","numberOfPage","currentPage","wordList","colors","deviceSizes","AppWrapper","styled","div","Header","Content","ButtonWrapper","height","width","tWidth","mWidth","Margin","top","bottom","right","left","TextWrapper","fontSize","fontColor","PageWrapper","Button","leftIcon","rightIcon","rest","ArrowRight","fill","clipRule","d","fillRule","TextArea","textarea","connect","dispatch","insertArticle","tooLongWord","split","map","word","length","Math","ceil","uid","insertAticle","injectIntl","intl","useState","setArticle","placeholder","formatMessage","tooLongWordMsg","onChange","value","target","to","onClick","ReadArticle","App","path","component","InsertArticle","Boolean","window","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","messages","messages_tr","messages_en","language","navigator","ReactDOM","render","locale","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.92cae0ff.chunk.js","sourcesContent":["import { INSERT_ARTICLE } from './InsertArticle.constants'\n\nconst initialState = {\n    articleList: []\n}\n\nexport const insertArticleReducer = (state = initialState, action) =>{\n    switch (action.type) {\n        case INSERT_ARTICLE:\n            return Object.assign({}, state, { \n                articleList : [\n                    ...state.articleList,\n                    {\n                        id: action.article.id,\n                        numberOfPage: action.article.numberOfPage,\n                        currentPage: action.article.currentPage,\n                        wordList: action.article.wordList,\n                    }\n                ]\n            })\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux'\nimport { insertArticleReducer } from './containers/InsertArticle/InsertArticle.reducer'\n\nconst reducers = combineReducers({\n    insertArticleReducer\n    })\n\nexport default reducers\n","export const INSERT_ARTICLE = 'INSERT_ARTICLE'\n","export const colors = {\n    purpleColor: \"#E1D5E7\",\n    purpleDarkColor: \"#9673A6\",\n    tundora: \"#4D4D4D\",\n    codGray: \"#1A1A1A\",\n    chelseaCucumber: \"#82B366\",\n    alabasterapprox: \"#FBFBFB\",\n    white: \"#FFFFFF\"\n}\n\nexport const deviceSizes = {\n    largeTablet: \"991px\",\n    tablet: \"767px\",\n    mobile: \"479px\",\n}\n","import styled from 'styled-components'\n\nimport { colors } from 'utils'\n\nexport const AppWrapper = styled.div`\n    display: flex;\n    flex-flow: column;\n    width: 100%;\n    height: inherit;\n`;\n\nexport const Header = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: ${colors.purpleColor};\n    height:50px;\n    font-weight: bold;\n    border-style: solid;\n    border-width: 1px;\n    border-color: ${colors.purpleDarkColor};\n`;\n\nexport const Content = styled.div`\n    display: flex;\n    flex-grow : 1;\n    flex-flow: column;\n    padding: 20px;\n`;\n","import styled from 'styled-components'\n\nimport { colors, deviceSizes } from 'utils'\n\nexport const ButtonWrapper = styled.div`\n    border-color: ${colors.purpleDarkColor};\n    border-width: 2px;\n    border-radius: 20px;\n    border-style: solid;\n    background-color: ${colors.white};\n    display: flex;\n    flex-flow: row;\n    align-items: center;\n    justify-content: space-between;\n    cursor: pointer;\n    \n    ${({height}) => height && `height: ${height}px`};\n    ${({width}) => width && `width: ${width}px`};\n    @media (max-width: ${deviceSizes.tablet}) {\n        ${({tWidth}) => tWidth && `width: ${tWidth}px`};\n    }\n    \n    @media (max-width: ${deviceSizes.mobile}) {\n        ${({mWidth}) => mWidth && `width: ${mWidth}px`};\n    }\n\n    :hover {\n        background-color: ${colors.alabasterapprox};\n    }\n`\n\n","import styled from 'styled-components'\n\nimport { colors } from 'utils'\n\nexport const Margin = styled.div`\n    ${({ top }) => top && `margin-top: ${top}px`}\n    ${({ bottom }) => bottom && `margin-bottom: ${bottom}px`}\n    ${({ right }) => right && `margin-right: ${right}px`}\n    ${({ left }) => left && `margin-left: ${left}px`}\n`\n\nexport const Padding = styled.div`\n    ${({ top }) => top && `padding-top: ${top}px;`}\n    ${({ bottom }) => bottom && `padding-bottom: ${bottom}px;`}\n    ${({ right }) => right && `padding-right: ${right}px;`}\n    ${({ left }) => left && `padding-left: ${left}px;`}\n`\n\nexport const TextWrapper = styled.div`\n    color: ${colors.codGray};\n    ${({ fontSize }) => fontSize && `font-size: ${fontSize}px;`}\n    ${({ fontColor }) => fontColor && `color: ${fontColor};`}\n`\n\nexport const PageWrapper = styled.div`\n    display: flex;\n    flex-flow: column;\n    flex-grow: 1;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n`;\n","import React from 'react'\nimport { FormattedMessage } from 'react-intl';\n\nimport { ButtonWrapper } from './Button.styled'\nimport { TextWrapper, Margin } from 'components/Layouts';\n\nconst Button = ({ leftIcon, rightIcon , ...rest}) => {\n    return (\n        <ButtonWrapper {...rest}>\n            <Margin left=\"4\">\n                {leftIcon}\n            </Margin>\n            <TextWrapper fontSize=\"20\">\n                <FormattedMessage id='insertArticle.button' />\n            </TextWrapper>\n            <Margin right=\"4\">\n                {rightIcon}\n            </Margin>\n        </ButtonWrapper>\n    )\n}\n\nexport default Button\n","import React from 'react'\n\nexport const ArrowRight = ({ fill = '#121313', width = 35, height = 32 }) => {\n    return (\n        <svg width={width} height={height} fill={fill}>\n            <path clipRule=\"evenodd\" d=\"M31.705,15.284L31.705,15.284L31.705,15.284  l-9.97-9.991c-0.634-0.66-1.748-0.162-1.723,0.734v4.976C20.008,11.002,20.004,11,20,11H1c-0.55,0-1,0.45-1,1v8c0,0.55,0.45,1,1,1  h19c0.004,0,0.008-0.002,0.012-0.002v4.972c-0.024,0.892,1.082,1.376,1.715,0.742l9.977-9.999  C32.098,16.318,32.098,15.678,31.705,15.284z M22.017,23.564V19H22h-1h-0.988v0.002C20.008,19.002,20.004,19,20,19h-1H2v-6h17h1  c0.004,0,0.008-0.002,0.012-0.002V13H21h1h0.017V8.432l7.55,7.566L22.017,23.564z\" fillRule=\"evenodd\" id=\"Arrow_Right\" />\n            <g /><g /><g /><g /><g /><g />\n        </svg>\n    )\n}\n","import styled from 'styled-components'\n\nimport { colors, deviceSizes } from 'utils'\n\nexport const TextArea = styled.textarea`\n    border-color: ${colors.purpleDarkColor};\n    border-width: 1px;\n    border-radius: 20px;\n    height: 340px;\n    font-size: 16px;\n    padding: 10px;\n    text-align: ${({ article }) => article ? 'left' : 'center'};\n    line-height: ${({ article }) => article ? '18px' : '340px'};\n    font-color: ${({ article }) => article ? colors.codGray : colors.tundora}\n\n    &: focus {\n        text-align: left;\n        line-height: 18px;\n    }\n\n    width: 720px;\n\n    @media (max-width: ${deviceSizes.tablet}) {\n        width: 450px;\n    }\n    @media (max-width: ${deviceSizes.mobile}) {\n        width: 290px;\n    }\n`\n","import React, { useState } from 'react'\nimport { injectIntl } from 'react-intl';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux'\n\nimport Button from 'components/Button';\nimport { Margin, PageWrapper } from 'components/Layouts';\nimport { ArrowRight } from 'components/Icons';\nimport { TextArea } from './InsertArticle.styled'\n\nimport { colors } from 'utils';\nimport { insertAticle } from './InsertArticle.action';\n\nconst InsertArticle = ({ intl, insertArticle }) => {\n    const [article, setArticle] = useState('');\n    const placeholder = intl.formatMessage({ id: 'insertArticle.placeholder' });\n    const tooLongWordMsg = intl.formatMessage({ id: 'insertArticle.action.tooLongWord' });\n\n    const handleChangeArticle = ({ target: { value } }) => {\n        setArticle(value)\n    }\n    return (\n        <PageWrapper>\n            <TextArea\n                onChange={handleChangeArticle}\n                article={article}\n                placeholder={placeholder} />\n            <Margin top=\"16\">\n                <Link to=\"/read\">\n                    <Button\n                        height=\"50\"\n                        width=\"740\"\n                        tWidth=\"470\"\n                        mWidth=\"310\"\n                        onClick={() => insertArticle(article,tooLongWordMsg)}\n                        rightIcon={<ArrowRight fill={colors.chelseaCucumber} />} />\n                </Link>\n            </Margin>\n        </PageWrapper>\n    )\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        insertArticle: (article, tooLongWord) => dispatch(insertAticle(article, tooLongWord)),\n    }\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(injectIntl(InsertArticle));\n","import uid from 'uid'\n\nimport { INSERT_ARTICLE } from './InsertArticle.constants'\n\nexport const insertAticle = (article, tooLongWord) => {\n    const wordList = article.split(' ').map(word =>\n        word.length < 30 ? word : tooLongWord)\n    const numberOfPage = Math.ceil(wordList.length / 100)\n    const currentPage = 1\n\n    return {\n        type: INSERT_ARTICLE,\n        article:{\n            id: uid(15),\n            numberOfPage,\n            currentPage,\n            wordList\n        }\n    }\n}\n","import React from 'react'\nimport { PageWrapper } from 'components/Layouts'\n\nconst ReadArticle = () => {\n    return (<PageWrapper>Read Page</PageWrapper>)\n}\n\nexport default ReadArticle;\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { AppWrapper, Header, Content } from './App.style'\nimport InsertArticle from 'containers/InsertArticle'\nimport ReadArticle from 'containers/ReadArticle';\n\nfunction App() {\n  return (\n    <AppWrapper >\n      <Header>\n        <FormattedMessage id='appName' />\n      </Header>\n      <Content>\n        <Router>\n          <Switch>\n            <Route path='/read' component={ReadArticle} />\n            <Route path='/' component={InsertArticle} />\n          </Switch>\n        </Router>\n      </Content>\n    </AppWrapper>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { IntlProvider } from 'react-intl';\n\nimport messages_en from 'translations/en.json'\nimport messages_tr from 'translations/tr.json'\nimport reducers from './reducers'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducers,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nconst messages = {\n    'tr': messages_tr,\n    'en': messages_en\n};\nconst language = navigator.language.split(/[-_]/)[0];\n\nReactDOM.render(\n    <Provider store={store}>\n        <IntlProvider locale={navigator.language} messages={messages[language]}>\n            <App />\n        </IntlProvider>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}